# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
     **/LoggingWebMvc.csproj
     
    arguments: '--configuration $(BuildConfiguration)  --output $(build.artifactstagingdirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Publish webjob'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Samples.WebJobs.Core.csproj'
    arguments: '--configuration $(BuildConfiguration)  --output $(build.artifactstagingdirectory)\App_Data\jobs\triggered\webtestjb'
    zipAfterPublish: false
    modifyOutputPath: false

- powershell: |
   # Write your PowerShell commands here.
   
   "dotnet Samples.WebJobs.Core.dll" | Out-File run.cmd -Encoding ASCII; $LASTEXITCODE
   
  workingDirectory: '$(build.artifactstagingdirectory)\App_Data\jobs\triggered\webtestjb'
  displayName: 'PowerShell Script'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'webjob_drop'
  condition: succeededOrFailed()
  
- script: |
    curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'pipeline-scan-LATEST.zip'
    cleanDestinationFolder: false  

